knitr::opts_chunk$set(echo = TRUE)
GSM5494555_col.0.1_count <- read.delim("GSM5494555_col-0-1_count.txt", row.names=1)
knitr::opt s_chunk$set(echo = TRUE)
knitr::opt s_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
GSM5494555_col.0.1_count <- read.delim("GSM5494555_col-0-1_count.txt", row.names=1)
install.packages('pheatmap')
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
library('dplyr')
library('stringr')
library('pheatmap')
#
# Create test matrix
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
# Draw heatmaps
pheatmap(test)
pheatmap(test, kmeans_k = 2)
pheatmap(test, scale = "row", clustering_distance_rows = "correlation")
pheatmap(test, color = colorRampPalette(c("navy", "white", "firebrick3"))(50))
pheatmap(test, cluster_row = FALSE)
pheatmap(test, legend = FALSE)
View(test)
library('pheatmap')
pheatmap(readcount)
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
library('dplyr')
library('stringr')
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
library('dplyr')
library('stringr')
df = read.delim('GSE124548.raw.fixed.txt', sep = '\t')
readcount = data.frame(select(df,contains("HC"),contains("Base")), row.names = df$EntrezID)
#
colnames = colnames(readcount)
condition_vec = c()
for (line in colnames)
{
if (str_detect(line,'HC'))
{
condition_vec = append(condition_vec,'Healthy')
}
else
{
condition_vec = append(condition_vec,'CF')
}
}
expgroup = data.frame(condition_vec,row.names = colnames)
library('DESeq2')
cds = DESeqDataSetFromMatrix(design= ~ condition_vec, countData = readcount, colData = expgroup)
#dds <- DESeqDataSetFromMatrix(countData = data, colData = coldata, design= ~ genotype + treatment + genotype:treatment)
cds = estimateSizeFactors(cds)
cds = estimateDispersions(cds)
plotDispEsts(cds)
#
cds = DESeq(cds)
resultsNames(cds)
results = results(cds, name = 'condition_vec_Healthy_vs_CF')
dim(subset(results, padj < 0.05 & log2FoldChange > 1))
dim(subset(results, padj < 0.05 & log2FoldChange < -1))
# 17 genes have an adjusted p-value of less than 0.05 and log2FoldChange greater than 1
# 192 genes have an adjusted p-value of less than 0.05 and log2FoldChange less than -1
diffexpgenes = subset(results, padj < 0.05 & (log2FoldChange > 1 | log2FoldChange < -1))
normvalues = counts(cds,normalized=TRUE)
#
diffexpgenes_df = as.data.frame(diffexpgenes)
diffexpvalues = normvalues[rownames(normvalues) %in% rownames(diffexpgenes_df), ]
#
dist = dist(diffexpgenes_df)
tree = hclust(dist)
clusters = cutree(tree,k = 8)
clusters_df = as.data.frame(clusters)
group_by(clusters_df, clusters) %>% summarize(count=n())
#
library('pheatmap')
pheatmap(readcount)
library('pheatmap')
pheatmap(readcount[1:20,1:10])
library('pheatmap')
pheatmap(expgroup)
# Create test matrix
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Gene", 1:20, sep = "")
# Draw heatmaps
pheatmap(test)
library('pheatmap')
pheatmap(readcount, scale = 'row', cluster_rows = TRUE, annotation_col= expgroup, annotation_row= clusters_df)
View(diffexpgenes)
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
library('dplyr')
library('stringr')
library('pheatmap')
pheatmap(readcount, scale = 'row', cluster_rows = TRUE, annotation_col= expgroup, annotation_row= clusters_df)
library('pheatmap')
pheatmap(readcount, scale = 'row', cluster_rows = TRUE, annotation_col= expgroup, annotation_row= clusters_df)
